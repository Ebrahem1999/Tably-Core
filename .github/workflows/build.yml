name: Build and Tag Tably-Core

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build library
        run: npm run build:lib
        
      - name: Commit built files
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add dist/
          git commit -m "Build library for distribution" || exit 0
          git push || exit 0
        
      - name: Create version tag
        if: github.ref == 'refs/heads/main'
        run: |
          # Create timestamp-based version
          VERSION="v$(date +%Y%m%d-%H%M%S)"
          echo "Creating tag: $VERSION"
          
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create and push tag
          git tag -a "$VERSION" -m "Auto-build $VERSION"
          git push origin "$VERSION"
          
          echo "Created tag: $VERSION"
          
      - name: Trigger project updates
        if: github.ref == 'refs/heads/main'
        run: |
          # ========================================
          # TRIGGER PROJECT UPDATES
          # ========================================
          # This step sends webhooks to project repositories
          # to automatically update their @tably/core dependency
          # ========================================
          
          echo "üöÄ Triggering project updates..."
          echo "üì¶ Version: $VERSION"
          
          # Function to trigger repository update
          trigger_repo_update() {
            local repo_name=$1
            local repo_owner=$2
            
            echo "üéØ Triggering update for: $repo_owner/$repo_name"
            
            # Send webhook to repository
            # This uses GitHub's repository dispatch API to trigger workflows
            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$repo_owner/$repo_name/dispatches \
              -d '{"event_type":"tably-core-updated","client_payload":{"version":"'$VERSION'"}}')
            
            # Parse the response to get HTTP status code and response body
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
            
            # Log the results for debugging
            echo "üìä HTTP Status Code for $repo_name: $HTTP_CODE"
            echo "üìÑ Response: $RESPONSE_BODY"
            
            # Check if the webhook was successful
            # HTTP 204 means "No Content" - this is the success response for repository dispatch
            if [ "$HTTP_CODE" = "204" ]; then
              echo "‚úÖ Successfully triggered $repo_name update"
              echo "üîÑ $repo_name will now update its @tably/core dependency"
            else
              echo "‚ùå Failed to trigger $repo_name update"
              echo "üîç Possible causes:"
              echo "   1. PAT_TOKEN secret not configured"
              echo "   2. $repo_name repository doesn't have the workflow file"
              echo "   3. PAT_TOKEN doesn't have access to $repo_name repository"
              echo "   4. $repo_name repository Actions not enabled"
            fi
          }
          
          # Trigger updates for all projects
          trigger_repo_update "main" "Ebrahem1999"
          trigger_repo_update "zuwade" "Ebrahem1999"
